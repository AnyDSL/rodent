struct TriangleMesh {
    tris: fn (int) -> Triangle,
    num_tris:  int,
    num_attrs: int
}

struct Triangle {
    v0: Vec3,
    v1: Vec3,
    v2: Vec3,

    attr0: fn (int) -> Attribute,
    attr1: fn (int) -> Attribute,
    attr2: fn (int) -> Attribute
}

// Procedurally generated cube
static cube = TriangleMesh {
    tris: |i| {
        let face = i / 2;
        let order = i % 2;
        let axis = face / 2;
        let dir  = if face % 2 == 0 { -1.0f } else { 1.0f };

        let x = |i| { if i % 2 == 0 {-1.0f} else {1.0f} };
        let y = |i| { if i / 2 == 0 {-1.0f} else {1.0f} };
        let seq = if order == 0 { [0, 2, 3] } else { [3, 1, 0] };

        let vertex = |x, y| {
            if axis == 0 { vec3(dir, x, y) } else 
            if axis == 1 { vec3(x, dir, y) } else 
                         { vec3(x, y, dir) }
        };

        Triangle {
            v0: vertex(x(seq(0)), y(seq(0))),
            v1: vertex(x(seq(1)), y(seq(1))),
            v2: vertex(x(seq(2)), y(seq(2))),

            attr0: dummy_attr,
            attr1: dummy_attr,
            attr2: dummy_attr
        }
    },

    num_attrs: 0,
    num_tris:  12
};
