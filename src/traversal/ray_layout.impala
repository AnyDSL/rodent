struct Ray1AoS {
    org: [f32 * 3],
    tmin: f32,
    dir: [f32 * 3],
    tmax: f32
}

struct Ray4SoA {
    org: [[f32 * 4] * 3],
    dir: [[f32 * 4] * 3],
    tmin: [f32 * 4],
    tmax: [f32 * 4]
}

struct Ray8SoA {
    org: [[f32 * 8] * 3],
    dir: [[f32 * 8] * 3],
    tmin: [f32 * 8],
    tmax: [f32 * 8]
}

struct Hit1AoS {
    tri_id: i32,
    t: f32,
    u: f32,
    v: f32
}

struct Hit4SoA {
    tri_id: [i32 * 4],
    t: [f32 * 4],
    u: [f32 * 4],
    v: [f32 * 4]
}

struct Hit8SoA {
    tri_id: [i32 * 8],
    t: [f32 * 8],
    u: [f32 * 8],
    v: [f32 * 8]
}

struct RayLayout {
    packet_size: i32,
    read_ray: fn (i32, i32) -> Ray,
    read_hit: fn (i32, i32) -> Hit,
    write_ray: fn (i32, i32, Ray) -> (),
    write_hit: fn (i32, i32, Hit) -> ()
}
