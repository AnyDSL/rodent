struct TaskManager {
    enqueue: fn (fn () -> ()) -> (),
    wait_all: fn () -> (),
    wait_one: fn () -> ()
}

fn make_task_manager(n_tasks: int) -> TaskManager {
    let mut task_ids = ~[int: n_tasks];
    let mut cur = 0;
    TaskManager {
        enqueue: |body| {
            if cur == n_tasks {
                body()
            } else {
                task_ids(cur++) = spawn_thread(body);
            }
        },
        wait_all: || {
            for i in range(0, cur) {
                sync_thread(task_ids(i))
            }
            cur = 0;
        },
        wait_one: || {
            if cur != 0 {
                cur--;
                sync_thread(task_ids(0));
                // Shift all tasks by one
                for j in range(0, cur) { task_ids(i) = task_ids(i + 1) }
            }
        }
    }
}
