// Compile-time scene data
struct Scene {
    num_shaders:    i32,
    num_geometries: i32,
    num_images:     i32,
    num_lights:     i32,

    shaders:    fn (i32) -> Shader,
    geometries: fn (i32) -> Geometry,
    images:     fn (i32) -> Image,
    lights:     fn (i32) -> Light,
    camera:     Camera
}

// Rendering device
struct Device {
    intrinsics: Intrinsics,

    trace:      fn (Scene, PathTracer) -> (),
    load_mesh:  fn (&[u8]) -> Geometry,
    load_image: fn (&[u8]) -> Image
}

struct FilmData {
    pixels: &mut [Color],
    width: i32,
    height: i32
}

type Renderer = fn (Scene, Device, i32) -> ();
type Shader   = fn (Intrinsics, Scene, SurfaceElement) -> Material;
