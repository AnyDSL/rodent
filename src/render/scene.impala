// Compile-time scene data
struct Scene {
    shaders:    fn (i32) -> Shader,
    geometries: fn (i32) -> Geometry,
    images:     fn (i32) -> Image,
    lights:     fn (i32) -> Light,
    camera:     Camera
}

// Rendering device
struct Device {
    load_mesh:   fn (&[u8]) -> Geometry,
    load_image:  fn (&[u8]) -> Image,
    alloc_film:  fn (i32, i32) -> Film,
    store_film:  fn (&[u8], Film) -> ()
}

struct Film {
    // Accumulate a sample on a film
    accumulate: fn (f32, f32, Color) -> (),
    // The associated (read-only) image
    image: Image
}

type Renderer = fn (Scene, Device, Film) -> ();
type Shader   = fn (Intrinsics, Scene, SurfaceElement) -> Material;
