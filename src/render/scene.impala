// Compile-time scene data
struct Scene {
    num_shaders:    i32,
    num_geometries: i32,
    num_images:     i32,
    num_lights:     i32,

    shaders:    fn (i32) -> Shader,
    geometries: fn (i32) -> Geometry,
    images:     fn (i32) -> Image,
    lights:     fn (i32) -> Light,
    camera:     Camera
}

// Rendering device
struct Device {
    intrinsics: Intrinsics,

    trace: fn (Scene, PathTracer) -> (),
    present: fn () -> (),
    load_buffer: fn (&[u8]) -> &[i8],
    load_bvh: fn (&[u8], i32) -> Bvh,
    load_png: fn (&[u8]) -> Image,
    load_jpg: fn (&[u8]) -> Image
    // TODO: Add other formats
}

type Renderer = fn (Scene, Device, i32) -> ();
type Shader   = fn (Intrinsics, Scene, Ray, Hit, SurfaceElement) -> Material;
